unit uParcelaModeloDao;

interface

uses
  System.SysUtils, System.Classes, Data.FMTBcd, Data.DB, Data.SqlExpr,
  Datasnap.Provider, Datasnap.DBClient, uDmConexao, uParcelaModelos, FireDAC.Stan.Intf,
  FireDAC.Stan.Option, FireDAC.Stan.Param, FireDAC.Stan.Error, FireDAC.DatS,
  FireDAC.Phys.Intf, FireDAC.DApt.Intf, FireDAC.Stan.Async, FireDAC.DApt,
  FireDAC.Comp.DataSet, FireDAC.Comp.Client, uFormaPagamento, uFormaPagamentoDao;

type
  TParcelaModeloDao = class(TObject)

  private
    { Private declarations }
    constructor Create;
    destructor free;
    procedure FieldToObj(var oParcelaModelo: TParcelaModelo; Qry: TFDQuery);
    procedure ObjToField(var oParcelaModelo: TParcelaModelo; Qry: TFDQuery);
  public
    { Public declarations }
    function Recuperar(Var oParcelaModelo: TParcelaModelo): boolean;
    function inserir(oParcelaModelo: TParcelaModelo): boolean;
    function Excluir(oParcelaModelo: TParcelaModelo): boolean;



  end;

var
  ParcelaModeloDao: TParcelaModeloDao;

implementation


constructor TParcelaModeloDao.Create;
begin
   //
end;

function TParcelaModeloDao.Excluir(oParcelaModelo: TParcelaModelo): boolean;
begin
    result := False;
    with DmConexao.Qry do
    begin
      Sql.Clear;
      Sql.Add('DELETE FROM CONDICAO_PAGAMENTO WHERE ID = :ID');
      paramByName('ID').AsInteger := oParcelaModelo.ID;
      ExecSql();
      result := true;
      close;
    end;
end;

procedure TParcelaModeloDao.FieldToObj(var oParcelaModelo: TParcelaModelo; Qry: TFDQuery);
begin
  with oParcelaModelo, Qry do
  begin
    ID := FieldByName('ID').AsInteger;
    Numero := FieldByName('NUMERO').AsInteger;
    Dias := FieldByName('DIAS').AsInteger;
    Percentual := FieldByName('PERCENTUAL').AsCurrency;

    DataCad := FieldByName('date_insert').AsDatetime;
    DataUltAlt := FieldByName('date_update').AsDatetime;
    user_insert := FieldByName('User_Insert').AsString;
    user_update := FieldByName('User_Update').AsString;
  end;
end;

destructor TParcelaModeloDao.free;
begin
  //
end;

function TParcelaModeloDao.inserir(oParcelaModelo: TParcelaModelo): boolean;
begin
  result := False;
  with DmConexao.Qry, oParcelaModelo do
  begin
      Sql.Clear;
      sql.add('INSERT INTO CONDICAO_PAGAMENTO ( NUMERO, DIAS, PERCENTUAL, ID_FORMA_PAGAMENTO, USER_INSERT, USER_UPDATE, DATE_INSERT, DATE_UPDATE)');
      Sql.add(' VALUES (:NUMERO, :DIAS, :PERCENTUAL, :ID_FORMA_PAGAMENTO, :USER_INSERT, :USER_UPDATE, :DATE_INSERT, :DATE_UPDATE)');

      ObjToField(oParcelaModelo, DmConexao.Qry);
      ExecSql();
      result := true;
      Close;
  end;
end;

procedure TParcelaModeloDao.ObjToField(var oParcelaModelo: TParcelaModelo; Qry: TFDQuery);
begin
  with oParcelaModelo, Qry do
  begin
    paramByName('NUMERO').AsInteger := Numero;
    paramByName('DIAS').AsInteger := Dias;
    paramByName('PERCENTUAL').AsCurrency := Percentual;
    paramByName('ID_FORMA_PAGAMENTO').AsInteger := FormaPag.Id;
    paramByName('date_insert').AsDatetime := DataCad;
    paramByName('date_update').AsDatetime := DataUltAlt;
    paramByName('User_Insert').AsString := user_insert;
    paramByName('User_Update').AsString := user_update;
  end;
end;

function TParcelaModeloDao.Recuperar(var oParcelaModelo: TParcelaModelo): boolean;
var FormaPagamento: TFormaPagamento;
    FormaPagamentoDao: TFormaPagamentoDao;
begin
    result := False;
    with DmConexao.Qry do
    begin
      sql.clear;
      FormaPagamento := TFormaPagamento.Create;
      Sql.Add('SELECT * FROM CONDICAO_PAGAMENTO WHERE ID = :ID');
      paramByName('ID').AsInteger := oParcelaModelo.ID;
      open;
      FieldtoObj(oParcelaModelo, DmConexao.Qry);
      FormaPagamento.Id := FieldByName('ID_FORMA_PAGAMENTO').AsInteger;
      result := true;
      close;

      FormaPagamentoDao := TFormaPagamentoDao.Create;
      try
         FormaPagamentoDao.Recuperar(FormaPagamento);
         oParcelaModelo.FormaPag.CopiarDados(FormaPagamento);
      finally
         FormaPagamentoDao.Free;
         FormaPagamento.Free;
      end;
    end;
end;

end.
